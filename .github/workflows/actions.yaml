# the code below is sudo code/command line code/linux code

# Event name (the Event that triggers the Job to run and since each push will trigger the Job to run we named it respectively)
name: on_push

# When the Event should Run (each time a push is performed on any (all branches: "**") of the branches)
on:
  push:
    branch:
      - "**"
# What Jobs to Execute (below we define a collection os jobs-our job name contains 2 spaces)
jobs:

  build_and_test:
    runs-on: ubuntu-latest

    # declare environments that the Tests will run
    env:
      RUNNER_OS: true
      HEADLESS_CHROME: true

    steps:
       # Set a Start Time
      - name: Set Start Time
        run: echo "START_TIME=$(date +%s)" >> $GITHUB_ENV
      - uses: actions/checkout@v2

      # Thinks we need to do to Run our Tests using the GitHub Actions
      # install java because we need java to run our Tests
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 16

      # Run maven(mvn) Tests
      - name: Run Tests with maven
        # declare the directory that contains maven (pom.xml file), here is webdriver_java
        working-directory: webdriver_java
        run: mvn test

      # Calculate Total Duration
      - name: Collect Build Data
        working-directory: webdriver_java
        if: always()
        # create a multiline run command using the pipe "|", which it tells yaml that the
        # code below is part of the same command
        run: |
          echo "TOTAL_DURATION=$(expr $(date +%s) - ${START_TIME})"
          ./resources/test_result_script.sh
          # Run the script to extract test results
        # Make sure to run even if previous step fails
         # Handle Remote ChromeDriver

# What are the steps within each Job